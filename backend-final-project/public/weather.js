let map;

async function getWeather() {
    const city = document.getElementById("city").value;
    if (!city) {
        document.getElementById("weatherResult").innerHTML = "<p class='error'>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!</p>";
        return;
    }

    const res = await fetch(`/weather?city=${city}`);
    const data = await res.json();

    if (data.error) {
        document.getElementById("weatherResult").innerHTML = `<p class='error'>–û—à–∏–±–∫–∞: ${data.error}</p>`;
        return;
    }

    document.getElementById("weatherResult").innerHTML = `
        <p>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <strong>${data.temperature}¬∞C</strong></p>
        <p>–í–ª–∞–∂–Ω–æ—Å—Ç—å: <strong>${data.humidity}%</strong></p>
        <p>–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: <strong>${data.feels_like}¬∞C</strong></p>
        <p>–î–∞–≤–ª–µ–Ω–∏–µ: <strong>${data.pressure} hPa</strong></p>
    `;

    if (data.coord) {
        updateMap(data.coord.lat, data.coord.lon);
    }
}

async function getForecast() {
    const city = document.getElementById("city").value;
    if (!city) {
        document.getElementById("forecastResult").innerHTML = "<p class='error'>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!</p>";
        return;
    }

    const res = await fetch(`/weather/forecast?city=${city}`);
    const data = await res.json();

    let forecastHtml = `<h3>–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 3 –¥–Ω—è –¥–ª—è ${city}:</h3>`;
    data.forecast.forEach(day => {
        forecastHtml += `<p>${day.date}: ${day.condition}, —Å—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${day.avg_temp}¬∞C</p>`;
    });

    document.getElementById("forecastResult").innerHTML = forecastHtml;
}

async function getAirQuality() {
    const city = document.getElementById("city").value;
    if (!city) {
        document.getElementById("airQualityResult").innerHTML = "<p class='error'>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!</p>";
        return;
    }

    const res = await fetch(`/weather/airquality?city=${city}`);
    const data = await res.json();

    if (data.error) {
        document.getElementById("airQualityResult").innerHTML = `<p class='error'>–û—à–∏–±–∫–∞: ${data.error}</p>`;
        return;
    }

    document.getElementById("airQualityResult").innerHTML = `
        <h3>–ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞ –≤ ${data.city}:</h3>
        <ul>
            <li><strong>PM10:</strong> ${data.air_quality.pm10} ¬µg/m¬≥</li>
            <li><strong>PM2.5:</strong> ${data.air_quality.pm2_5} ¬µg/m¬≥</li>
            <li><strong>CO (–£–≥–ª–µ—Ä–æ–¥–Ω—ã–π –æ–∫—Å–∏–¥):</strong> ${data.air_quality.co} ppm</li>
            <li><strong>NO2 (–î–∏–æ–∫—Å–∏–¥ –∞–∑–æ—Ç–∞):</strong> ${data.air_quality.no2} ppb</li>
            <li><strong>SO2 (–î–∏–æ–∫—Å–∏–¥ —Å–µ—Ä—ã):</strong> ${data.air_quality.so2} ppb</li>
            <li><strong>O3 (–û–∑–æ–Ω):</strong> ${data.air_quality.o3} ppb</li>
        </ul>
    `;
}

function updateMap(lat, lon) {
    if (!map) {
        map = L.map('map').setView([lat, lon], 10);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; OpenStreetMap contributors'
        }).addTo(map);
    } else {
        map.setView([lat, lon], 10);
    }

    // üìå –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –º–∞—Ä–∫–µ—Ä (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if (map.marker) {
        map.removeLayer(map.marker);
    }

    // üìå –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –º–∞—Ä–∫–µ—Ä
    map.marker = L.marker([lat, lon]).addTo(map)
        .bindPopup("–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞")
        .openPopup();
}
