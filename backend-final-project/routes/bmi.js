const express = require("express");
const router = express.Router();

// üìå –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ò–ú–¢ (POST)
router.post("/", (req, res) => {
    try {
        const { weight, height } = req.body;
        if (!weight || !height) {
            return res.status(400).json({ message: "–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å –∏ —Ä–æ—Å—Ç" });
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Ä–æ—Å—Ç –ø–µ—Ä–µ–¥–∞–Ω –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 175)
        const heightInMeters = height > 3 ? height / 100 : height;

        const bmi = (weight / (heightInMeters * heightInMeters)).toFixed(2);
        let category = "";

        if (bmi < 18.5) category = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –≤–µ—Å";
        else if (bmi < 24.9) category = "–ù–æ—Ä–º–∞";
        else if (bmi < 29.9) category = "–ò–∑–±—ã—Ç–æ—á–Ω—ã–π –≤–µ—Å";
        else category = "–û–∂–∏—Ä–µ–Ω–∏–µ";

        res.json({ bmi, category });
    } catch (error) {
        res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
});

// üìå –¢–µ—Å—Ç–æ–≤—ã–π GET-–∑–∞–ø—Ä–æ—Å (—á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å)
router.get("/", (req, res) => {
    res.json({ message: "BMI API —Ä–∞–±–æ—Ç–∞–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ POST /bmi" });
});

module.exports = router;

